{"swaggerVersion":"1.0","apiVersion":"2.0.1","apis":[{"path":"/authentication","description":"","apiDeclaration":{"swaggerVersion":"1.0","apiVersion":"2.0.1","basePath":"http://localhost:8888","resourcePath":"/authentication","apis":[{"path":"/token","description":"","operations":[{"notes":"userId could email or combination of username and company name eg. (username#company)","nickname":"login","parameters":[{"name":"userId","description":"User id","dataType":"String","allowMultiple":false,"paramType":"auth"},{"name":"password","description":"User password","dataType":"String","allowMultiple":false,"paramType":"auth"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"generates tokens for given username/password combination","httpMethod":"POST"}]},{"path":"/testToken/{token}","description":"","operations":[{"nickname":"testToken","parameters":[{"name":"token","description":"Token to validates","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"validates token","httpMethod":"GET"}]}],"models":{}}},{"path":"/companies","description":"","apiDeclaration":{"swaggerVersion":"1.0","apiVersion":"2.0.1","basePath":"http://localhost:8888","resourcePath":"/companies","apis":[{"path":"/companies/register","description":"","operations":[{"notes":"","nickname":"register","parameters":[{"name":"props","description":"Company object that needs to be added to the db","dataType":"Company","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":404,"reason":"Duplicate company name"}],"summary":"Register new company","httpMethod":"POST"}]}],"models":{"Company":{"id":"Company","properties":{"name":{"type":"string","required":"true"},"status":{"type":"string","enum":["active","deleted"]},"addresses":{"type":"array","items":{"$ref":"Address"}},"admin":{"type":"User","required":"true"},"registrationDate":{"type":"date"}}},"User":{"id":"User","properties":{"username":{"type":"string","required":"true"},"company":{"type":"string","required":"true"},"vehicleId":{"type":"string"},"vehicleType":{"type":"string","enum":["bicycle","motorbike","van","car"]},"profile":{"type":"UserProfile"},"status":{"type":"string","enum":["active","deleted"]},"roles":{"type":"array","required":"true","enum":["admin","dispatcher","courier"]},"registrationDate":{"type":"date"},"online":{"type":"integer","required":"true","description":"User is online when 1"},"deviceTokens":{"type":"array"}}},"Address":{"id":"Address","properties":{"type":{"type":"string","required":"true"},"validFrom":{"type":"string","format":"date-time"},"validTo":{"type":"string","format":"date-time"},"consignee":{"type":"string"},"phoneNr":{"type":"string"},"email":{"type":"string"},"country":{"type":"string"},"countryCode":{"type":"string"},"state":{"type":"string"},"county":{"type":"string"},"zip":{"type":"string"},"city":{"type":"string"},"district":{"type":"string"},"street":{"type":"string"},"housenumber":{"type":"number"},"coords":{"$ref":"Coordinates"}}},"UserProfile":{"id":"UserProfile","properties":{"titleBefore":{"type":"string"},"name":{"type":"string"},"surname":{"type":"string"},"titleAfter":{"type":"string"},"age":{"type":"integer"},"phoneNr":{"type":"string"},"email":{"type":"string"}}},"Credentials":{"id":"Credentials","properties":{"username":{"type":"string","required":"true"},"email":{"type":"string","required":"true"},"password":{"type":"string","required":"true"}}}}}},{"path":"/users","description":"","apiDeclaration":{"swaggerVersion":"1.0","apiVersion":"2.0.1","basePath":"http://localhost:8888","resourcePath":"/users","apis":[{"path":"/users","description":"","operations":[{"notes":"Check <a href=\"https://github.com/adamjacobbecker/mongoose-api-query\">mongoose-api-query</a> for more details.","nickname":"get","summary":"Returns all users","parameters":[{"name":"username","description":"Get all users with username","dataType":"string","paramType":"query"},{"name":"company","description":"Get all users from company","dataType":"string","paramType":"query"},{"name":"roles","description":"Get users having roles","dataType":"string","paramType":"query"},{"name":"online","description":"Get all online/offline users","dataType":"boolean","paramType":"query"},{"name":"status","description":"Get all users based on their status","dataType":"string","paramType":"query"},{"name":"page","description":"page number (default: 1)","dataType":"integer","paramType":"query"},{"name":"per_page","description":"users per page (default 30, max: 100)","dataType":"integer","paramType":"query"},{"name":"sort_by","description":"Sort routes by any criteria","dataType":"string","paramType":"query"},{"name":"fields","description":"Limiting which fields are returned by the API (comma separated)","dataType":"string","paramType":"query"}],"responseClass":"List[User]","errorResponses":[{"code":401,"reason":"Authentication failed"}],"httpMethod":"GET"},{"notes":"REQUEST_EXAMPLE:<br>On success: HTTP 201 status code will be returned and Location header will point to the URL of the new user.<br/><pre>{<br/>    &quot;username&quot;: &quot;johndoe&quot;,<br/>    &quot;password&quot;: &quot;strong&quot;,<br/>    &quot;company&quot;: &quot;mapilary&quot;,<br/>    &quot;roles&quot;: [&quot;courier&quot;],<br/>    &quot;deviceTokens&quot;: [&quot;token&quot;],<br/>    &quot;vehicleType&quot;: &quot;car&quot;,<br/>    &quot;profile&quot;: {<br/>        &quot;titleBefore&quot;: &quot;Ing.&quot;,<br/>        &quot;name&quot;: &quot;John&quot;,<br/>        &quot;surname&quot;: &quot;John&quot;,<br/>        &quot;age&quot;: 48,<br/>        &quot;phoneNr&quot;: &quot;+421890345830&quot;,<br/>        &quot;email&quot;: &quot;johndoe@company.com&quot;<br/>    }<br/>}</pre>","nickname":"create","parameters":[{"name":"props","description":"User object that needs to be added to the db","dataType":"User","required":true,"allowMultiple":false,"paramType":"body"},{"name":"upsert","description":"If true, update existing user or create new if it doesn't exists","dataType":"boolean","paramType":"query"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Create new user","httpMethod":"POST"}]},{"path":"/users/findOnline","description":"","operations":[{"nickname":"findOnline","parameters":[{"name":"onlineSince","description":"Users online since specified datetime","dataType":"string","paramType":"query"}],"responseClass":"List[User]","errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Return online users only","httpMethod":"GET"}]},{"path":"/users/{id}","description":"","operations":[{"notes":"Users may have multiple roles<br>To get user invoking request use \"this\" as id","nickname":"getById","parameters":[{"name":"id","description":"Id of users","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"}],"errorResponses":[{"code":404,"reason":"User not found"},{"code":401,"reason":"Authentication failed"}],"summary":"Gets information about a specific user","httpMethod":"GET"},{"notes":"Warning: All fields will be replaced. If you wan't to update only specific fields use PATCH methods<br>","nickname":"replace","parameters":[{"name":"id","description":"Id of user","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"props","description":"User profile object","dataType":"User","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Update user profile","httpMethod":"PUT"},{"nickname":"update","parameters":[{"name":"id","description":"Id of user","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"props","description":"User profile object","dataType":"User","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Update user profile","httpMethod":"PATCH"},{"notes":"","nickname":"delete","parameters":[{"name":"id","description":"Id of users","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"}],"errorResponses":[{"code":404,"reason":"User not found"},{"code":401,"reason":"Authentication failed"}],"summary":"Delete user","httpMethod":"DELETE"}]},{"path":"/users/{id}/changePassword","description":"","operations":[{"notes":"Notice: Password won't be changed if both *password properties are not set<br>To change password for user invoking request use \"this\" as id<br>REQUEST_EXAMPLE: changing password:<br><pre>{<br/>   &quot;oldPassword&quot;:&quot;old&quot;,<br/>   &quot;newPassword&quot;:&quot;new&quot;<br/>}</pre>","nickname":"changePassword","parameters":[{"name":"id","description":"Id of user","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"passwords","description":"User profile object","dataType":"object","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Change user password","httpMethod":"PATCH"}]},{"path":"/users/{id}/updateProfile","description":"","operations":[{"notes":"To change profile for user invoking request use \"this\" as id<br>REQUEST_EXAMPLE:<br><pre></pre>","nickname":"updateProfile","parameters":[{"name":"id","description":"Id of user","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"profile","description":"User profile object","dataType":"UserProfile","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Update user profile","httpMethod":"PATCH"}]},{"path":"/users/{id}/addRole","description":"","operations":[{"nickname":"addRole","parameters":[{"name":"id","description":"Id of user","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"role","description":"Name of the role","dataType":"string","paramType":"query"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Add role to user (assign)","httpMethod":"PATCH"}]},{"path":"/users/{id}/removeRole","description":"","operations":[{"nickname":"removeRole","parameters":[{"name":"id","description":"Id of user","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"role","description":"Name of the role","dataType":"string","paramType":"query"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Remove role to user (assign)","httpMethod":"PATCH"}]},{"path":"/users/activate/{token}","description":"","operations":[{"notes":"","nickname":"activate","parameters":[{"name":"token","description":"Activation token","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"redirectTo","description":"After successful creation redirect to given url","dataType":"string","paramType":"query"}],"errorResponses":[{"code":404,"reason":"Token not found"}],"summary":"Activate user","httpMethod":"GET"}]},{"path":"/users/{id}/online","description":"","operations":[{"nickname":"setOnline","parameters":[{"name":"id","description":"Id of user","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"online","description":"User online status","dataType":"boolean","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Set user online status","httpMethod":"PATCH"}]}],"models":{"User":{"id":"User","properties":{"username":{"type":"string","required":"true"},"company":{"type":"string","required":"true"},"vehicleId":{"type":"string"},"vehicleType":{"type":"string","enum":["bicycle","motorbike","van","car"]},"profile":{"type":"UserProfile"},"status":{"type":"string","enum":["active","deleted"]},"roles":{"type":"array","required":"true","enum":["admin","dispatcher","courier"]},"registrationDate":{"type":"date"},"online":{"type":"integer","required":"true","description":"User is online when 1"},"deviceTokens":{"type":"array"}}},"UserProfile":{"id":"UserProfile","properties":{"titleBefore":{"type":"string"},"name":{"type":"string"},"surname":{"type":"string"},"titleAfter":{"type":"string"},"age":{"type":"integer"},"phoneNr":{"type":"string"},"email":{"type":"string"}}},"Credentials":{"id":"Credentials","properties":{"username":{"type":"string","required":"true"},"email":{"type":"string","required":"true"},"password":{"type":"string","required":"true"}}}}}},{"path":"/deliveries","description":"","apiDeclaration":{"swaggerVersion":"1.0","apiVersion":"2.0.1","basePath":"http://localhost:8888","resourcePath":"/deliveries","apis":[{"path":"/deliveries","description":"","operations":[{"notes":"Check <a href=\"https://github.com/adamjacobbecker/mongoose-api-query\">mongoose-api-query</a> for more details.","nickname":"get","summary":"Returns all deliveries","parameters":[{"name":"sid","description":"Get deliveries by serial id","dataType":"integer","paramType":"query"},{"name":"company","description":"Get deliveries for company","dataType":"string","paramType":"query"},{"name":"trackingNr","description":"Get deliveries by tracking number","dataType":"string","paramType":"query"},{"name":"startDate","description":"Get deliveries by date of start (format: YYYY-MM-DD)","dataType":"string","paramType":"query"},{"name":"state","description":"Get delivery by state","dataType":"string","paramType":"query"},{"name":"page","description":"page number (mandatory)","dataType":"integer","paramType":"query"},{"name":"per_page","description":"users per page (default 10)","dataType":"integer","paramType":"query"},{"name":"sort_by","description":"Sort routes by any criteria","dataType":"string","paramType":"query"},{"name":"fields","description":"Limiting which fields are returned by the API (comma separated)","dataType":"string","paramType":"query"},{"name":"embed","description":"load data related to (or referenced) from the resource being requested (eg. delivery.route)","dataType":"string","paramType":"query"}],"responseClass":"List[Delivery]","errorResponses":[{"code":401,"reason":"Authentication failed"}],"httpMethod":"GET"},{"notes":"Creating multiple deliveries is possible - use array<br>EXAMPLE:<br><pre>{<br/>    &quot;trackingNr&quot;: &quot;AZ90157&quot;,<br/>    &quot;startDate&quot;: &quot;2012-09-09T08:00:00.000Z&quot;,<br/>    &quot;endDate&quot;: &quot;2012-09-09T08:30:00.000Z&quot;,<br/>    &quot;duration&quot;: 3000,<br/>    &quot;company&quot;: &quot;mapilary&quot;,<br/>    &quot;note&quot;: &quot;delivery from previous day&quot;,<br/>    &quot;priority&quot;: 2,<br/>    &quot;state&quot;: &quot;Delayed&quot;,<br/>    &quot;addresses&quot;: [<br/>        {<br/>            &quot;type&quot;: &quot;pickup&quot;,<br/>            &quot;validFrom&quot;: &quot;2013-06-27T19:36:18.371Z&quot;,<br/>            &quot;validTo&quot;: &quot;2013-06-27T23:36:18.371Z&quot;,<br/>            &quot;consignee&quot;: &quot;Barrett Leblanc&quot;,<br/>            &quot;phoneNr&quot;: &quot;+1 (818) 416-2951&quot;,<br/>            &quot;email&quot;: &quot;barrettleblanc@accidency.com&quot;,<br/>            &quot;city&quot;: &quot;Harrodsburg&quot;,<br/>            &quot;street&quot;: &quot;Bayview Avenue&quot;,<br/>            &quot;countryCode&quot;: &quot;New Jersey&quot;,<br/>            &quot;coords&quot;: {<br/>                &quot;latitude&quot;: 60.270045,<br/>                &quot;longitude&quot;: -119.875044<br/>            }<br/>        },<br/>        {<br/>            &quot;type&quot;: &quot;drop&quot;,<br/>            &quot;validFrom&quot;: &quot;2013-07-07T15:09:25.466Z&quot;,<br/>            &quot;validTo&quot;: &quot;2013-07-08T04:09:25.466Z&quot;,<br/>            &quot;consignee&quot;: &quot;Julia Woodard&quot;,<br/>            &quot;phoneNr&quot;: &quot;+1 (980) 547-3940&quot;,<br/>            &quot;email&quot;: &quot;juliawoodard@accidency.com&quot;,<br/>            &quot;city&quot;: &quot;Bentley&quot;,<br/>            &quot;street&quot;: &quot;Moffat Street&quot;,<br/>            &quot;housenumber&quot;: &quot;13&quot;,<br/>            &quot;countryCode&quot;: &quot;Georgia&quot;,<br/>            &quot;coords&quot;: {<br/>                &quot;latitude&quot;: -66.730811,<br/>                &quot;longitude&quot;: 52.468852<br/>            }<br/>        }<br/>    ]<br/>}</pre>On success: HTTP 201 status code will be returned and Location header will point to the URL of the new user.","nickname":"create","parameters":[{"name":"props","description":"Delivery(ies) object that needs to be added to the db","dataType":"Delivery","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"responseHeaders":[{"name":"Location","description":"The full URI of the created resource","required":true,"value":"URI"}],"summary":"Create new delivery","httpMethod":"POST"}]},{"path":"/deliveries/find","description":"","operations":[{"nickname":"find","parameters":[{"name":"trackingNr","description":"TrackingNr of delivery","dataType":"string","paramType":"query"}],"responseClass":"Delivery","errorResponses":[{"code":404,"reason":"Delivery not found"},{"code":401,"reason":"Authentication failed"}],"summary":"Gets public information about a specific delivery","httpMethod":"GET"}]},{"path":"/deliveries/{id}/recommendCouriers","description":"","operations":[{"nickname":"recommendCouriers","parameters":[{"name":"id","description":"Id of delivery","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"strategy","description":"Strategy for finding best couriers [fastPickup,shortestDistance,shortestTime]","dataType":"string","paramType":"query"},{"name":"limit","description":"Limit number of couriers (default 3)","dataType":"number","paramType":"query"}],"errorResponses":[{"code":404,"reason":"Delivery not found"},{"code":401,"reason":"Authentication failed"}],"summary":"Gets recommended couriers for specific delivery","httpMethod":"GET"}]},{"path":"/deliveries/{id}","description":"","operations":[{"nickname":"getById","parameters":[{"name":"id","description":"Id of delivery","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"}],"responseClass":"Delivery","errorResponses":[{"code":404,"reason":"Delivery not found"},{"code":401,"reason":"Authentication failed"}],"summary":"Gets information about a specific delivery","httpMethod":"GET"},{"notes":"Warning: If you wan't to update only specific fields use PATCH methods<br>The HTTP RFC specifies that PUT must take a full new resource representation as the request entity.<br>This means that if for example only certain attributes are provided, those should be remove (i.e. set to null).","nickname":"replace","parameters":[{"name":"id","description":"Id of delivery","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"props","description":"Delivery object","dataType":"Delivery","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Update delivery","httpMethod":"PUT"},{"notes":"update only specified fields.<br><pre>{<br/>  &quot;deliveryDate&quot;: &quot;2013-10-02&quot;,<br/>  &quot;addresses&quot;: [<br/>    {<br/>      &quot;type&quot;: &quot;home&quot;,<br/>      &quot;validFrom&quot;: &quot;2013-10-01T18:00:01.000Z&quot;,<br/>      &quot;validTo&quot;: &quot;2013-10-01T22:00:00.000Z&quot;,<br/>      &quot;consignee&quot;: &quot;Marek Maly&quot;,<br/>      &quot;country&quot;: &quot;Slovakia&quot;,<br/>      &quot;countryCode&quot;: &quot;SK&quot;,<br/>      &quot;zip&quot;: &quot;&quot;,<br/>      &quot;city&quot;: &quot;Trnava&quot;,<br/>      &quot;street&quot;: &quot;&quot;<br/>    }<br/>  ],<br/> &quot;note&quot;: &quot;delivery from previous day&quot;<br/>}</pre>","nickname":"update","parameters":[{"name":"id","description":"Id of delivery","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"props","description":"Delivery object","dataType":"Delivery","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Update delivery","httpMethod":"PATCH"},{"notes":"","nickname":"delete","parameters":[{"name":"id","description":"Id of delivery","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"}],"errorResponses":[{"code":500,"reason":"Delivery not found"},{"code":401,"reason":"Authentication failed"}],"summary":"Delete delivery","httpMethod":"DELETE"}]},{"path":"/deliveries/{id}/addToRoute/{routeId}","description":"","operations":[{"notes":"","nickname":"addToRoute","parameters":[{"name":"id","description":"Id of delivery","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"routeId","description":"Id of route","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Add delivery to route","httpMethod":"POST"}]},{"path":"/deliveries/{id}/removeFromRoute","description":"","operations":[{"notes":"","nickname":"removeFromRoute","parameters":[{"name":"id","description":"Id of delivery","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Remove delivery from route","httpMethod":"POST"}]},{"path":"/deliveries/{id}/changeRoute/{routeId}","description":"","operations":[{"notes":"delivery will be removed from old route and added to new one","nickname":"changeRoute","parameters":[{"name":"id","description":"Id of delivery","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"routeId","description":"Id of new route","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Change route for delivery","httpMethod":"POST"}]}],"models":{"Delivery":{"id":"Delivery","properties":{"trackingNr":{"type":"string"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"routeStartOffset":{"type":"integer"},"duration":{"type":"integer"},"company":{"type":"string"},"priority":{"type":"integer"},"addresses":{"type":"array","items":{"$ref":"Address"}},"etd":{"type":"ETD"},"state":{"type":"string","required":"true","enum":["Initial","Created","Assigned","In Transit","Out for Delivery","Delivered","Failed Attempt","Exception","Expired","Pending","Delayed"]},"note":{"type":"string"},"route":{"$ref":"Route"},"courier":{"$ref":"User"},"driverRating":{"type":"integer"},"deviceTokens":{"type":"array","items":{"type":"string"}}}},"UserProfile":{"id":"UserProfile","properties":{"titleBefore":{"type":"string"},"name":{"type":"string"},"surname":{"type":"string"},"titleAfter":{"type":"string"},"age":{"type":"integer"},"phoneNr":{"type":"string"},"email":{"type":"string"}}},"Address":{"id":"Address","properties":{"type":{"type":"string","required":"true"},"validFrom":{"type":"string","format":"date-time"},"validTo":{"type":"string","format":"date-time"},"consignee":{"type":"string"},"phoneNr":{"type":"string"},"email":{"type":"string"},"country":{"type":"string"},"countryCode":{"type":"string"},"state":{"type":"string"},"county":{"type":"string"},"zip":{"type":"string"},"city":{"type":"string"},"district":{"type":"string"},"street":{"type":"string"},"housenumber":{"type":"number"},"coords":{"$ref":"Coordinates"}}},"Coordinates":{"id":"Coordinates","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"timestamp":{"type":"number"},"accuracy":{"type":"number"}}},"ETD":{"properties":{"date":{"type":"date"},"diffTime":{"type":"number"},"orderNr":{"type":"number"}}}}}},{"path":"/routes","description":"","apiDeclaration":{"swaggerVersion":"1.0","apiVersion":"2.0.1","basePath":"http://localhost:8888","resourcePath":"/routes","apis":[{"path":"/routes","description":"","operations":[{"notes":"Check <a href=\"https://github.com/adamjacobbecker/mongoose-api-query\">mongoose-api-query</a> for more details.","nickname":"get","summary":"Returns all routes","parameters":[{"name":"sid","description":"Get routes by serial id","dataType":"integer","paramType":"query"},{"name":"name","description":"Get routes by name","dataType":"string","paramType":"query"},{"name":"courier","description":"Get routes by courier","dataType":"string","paramType":"query"},{"name":"startDate","description":"Get routes by route start date","dataType":"string","paramType":"query"},{"name":"endDate","description":"Get routes by route end date","dataType":"string","paramType":"query"},{"name":"page","description":"page number (mandatory)","dataType":"integer","paramType":"query"},{"name":"per_page","description":"users per page (default 10)","dataType":"integer","paramType":"query"},{"name":"sort_by","description":"Sort routes by any criteria","dataType":"integer","paramType":"query"},{"name":"fields","description":"Limiting which fields are returned by the API (comma separated)","dataType":"string","paramType":"query"},{"name":"embed","description":"load data related to (or referenced) from the resource being requested (eg. deliveries.delivery)","dataType":"string","paramType":"query"}],"responseClass":"List[Route]","errorResponses":[{"code":401,"reason":"Authentication failed"}],"httpMethod":"GET"},{"notes":"For date format check http://momentjs.com/docs/<br>REQUEST_EXAMPLE:<br><pre>{<br/>    &quot;name&quot;: &quot;my route&quot;,<br/>    &quot;company&quot;: &quot;mapilary&quot;,<br/>    &quot;startDate&quot;: &quot;2013-11-13&quot;,<br/>    &quot;endDate&quot;: &quot;2013-11-14&quot;,<br/>    &quot;note&quot;: &quot;Dolor nulla ad sit nisi irure reprehenderit.&quot;,<br/>    &quot;state&quot;: &quot;Created&quot;,<br/>    &quot;deliveries&quot;: [<br/>        {<br/>            &quot;trackingNr&quot;: &quot;AZ2810&quot;,<br/>            &quot;priority&quot;: 2,<br/>            &quot;deliveryDate&quot;: &quot;1996-09-25&quot;,<br/>            &quot;addresses&quot;: [<br/>                {<br/>                    &quot;type&quot;: &quot;pickup&quot;,<br/>                    &quot;validFrom&quot;: &quot;2013-06-25T00:37:29.750Z&quot;,<br/>                    &quot;validTo&quot;: &quot;2013-06-25T22:37:29.750Z&quot;,<br/>                    &quot;consignee&quot;: &quot;Patrice Morales&quot;,<br/>                    &quot;phoneNr&quot;: &quot;+1 (984) 500-3443&quot;,<br/>                    &quot;email&quot;: &quot;patricemorales@acruex.com&quot;,<br/>                    &quot;city&quot;: &quot;Dola&quot;,<br/>                    &quot;street&quot;: &quot;Garfield Place&quot;,<br/>                    &quot;houseNr&quot;: 698,<br/>                    &quot;countryCode&quot;: &quot;New Mexico&quot;,<br/>                    &quot;coords&quot;: {<br/>                        &quot;latitude&quot;: 37.421539,<br/>                        &quot;longitude&quot;: -38.303878<br/>                    }<br/>                },<br/>                {<br/>                    &quot;type&quot;: &quot;drop&quot;,<br/>                    &quot;validFrom&quot;: &quot;2013-07-05T02:03:41.791Z&quot;,<br/>                    &quot;validTo&quot;: &quot;2013-07-05T19:03:41.791Z&quot;,<br/>                    &quot;consignee&quot;: &quot;Conway Hernandez&quot;,<br/>                    &quot;phoneNr&quot;: &quot;+1 (833) 593-3848&quot;,<br/>                    &quot;email&quot;: &quot;conwayhernandez@acruex.com&quot;,<br/>                    &quot;city&quot;: &quot;Elliston&quot;,<br/>                    &quot;street&quot;: &quot;Narrows Avenue&quot;,<br/>                    &quot;houseNr&quot;: 350,<br/>                    &quot;countryCode&quot;: &quot;New Jersey&quot;,<br/>                    &quot;coords&quot;: {<br/>                        &quot;latitude&quot;: -9.149617,<br/>                        &quot;longitude&quot;: -17.946592<br/>                    }<br/>                }<br/>            ],<br/>            &quot;state&quot;: &quot;Expired&quot;,<br/>            &quot;note&quot;: &quot;&quot;<br/>        }<br/>    ]<br/>}</pre>On success: HTTP 201 status code will be returned and Location header will point to the URL of the new user.","nickname":"create","parameters":[{"name":"props","description":"Route object(s) that needs to be added to the db","dataType":"Route","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Create new route","httpMethod":"POST"}]},{"path":"/routes/{id}","description":"","operations":[{"nickname":"getById","parameters":[{"name":"id","description":"Id of route","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"}],"responseClass":"Route","errorResponses":[{"code":404,"reason":"Route not found"},{"code":401,"reason":"Authentication failed"}],"summary":"Gets information about a specific route","httpMethod":"GET"},{"notes":"Warning: If you wan't to update only specific fields use PATCH methods<br>The HTTP RFC specifies that PUT must take a full new resource representation as the request entity.<br>This means that if for example only certain attributes are provided, those should be remove (i.e. set to null).","nickname":"replace","parameters":[{"name":"id","description":"Id of route","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"props","description":"Route object","dataType":"Route","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Update delivery (replace)","httpMethod":"PUT"},{"notes":"REQUEST_EXAMPLE:<br><pre>{<br/>    &quot;name&quot;: &quot;thursday&quot;,<br/>    &quot;deliveries&quot;: [<br/>        {<br/>            &quot;id&quot;: &quot;52502e696b869d3654001d48&quot;,<br/>            &quot;address&quot;: [{<br/>                &quot;type&quot;: &quot;home&quot;,<br/>                &quot;validFrom&quot;: &quot;2013-07-26T11:07:03.565Z&quot;,<br/>                &quot;validTo&quot;: &quot;2013-07-27T10:07:03.565Z&quot;,<br/>                &quot;consignee&quot;: &quot;Tanisha Pearson&quot;,<br/>                &quot;phoneNr&quot;: &quot;+1 (854) 458-2408&quot;,<br/>                &quot;email&quot;: &quot;tanishapearson@phuel.com&quot;,<br/>                &quot;city&quot;: &quot;Barronett&quot;,<br/>                &quot;street&quot;: &quot;Louis Place&quot;,<br/>                &quot;countryCode&quot;: &quot;Pennsylvania&quot;,<br/>                &quot;_id&quot;: &quot;52502e696b869d3654001d4a&quot;,<br/>                &quot;coords&quot;: {<br/>                    &quot;latitude&quot;: -87.164224,<br/>                    &quot;longitude&quot;: 92.968309<br/>                }<br/>            }],<br/>            &quot;orderNr&quot;: 4,<br/>            &quot;diffTime&quot;: 1200<br/>        }<br/>    ]<br/>}</pre>","nickname":"update","parameters":[{"name":"id","description":"Id of route","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"props","description":"Route object","dataType":"Route","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Update route","httpMethod":"PATCH"},{"notes":"","nickname":"delete","parameters":[{"name":"id","description":"Id of route","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"deleteDeliveries","description":"Flag if also deliveries should be deleted (true/false)","dataType":"string","paramType":"query"}],"errorResponses":[{"code":500,"reason":"Route not found"},{"code":401,"reason":"Authentication failed"}],"summary":"Delete route","httpMethod":"DELETE"}]},{"path":"/routes/{id}/etr","description":"","operations":[{"nickname":"getETR","parameters":[{"name":"id","description":"Id of route","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"lat","description":"Latitude of courier","dataType":"string","paramType":"query"},{"name":"lng","description":"Longitude of courier","dataType":"string","paramType":"query"}],"responseClass":"ETR","errorResponses":[{"code":404,"reason":"Route not found"},{"code":401,"reason":"Authentication failed"}],"summary":"Gets estimated time of route","httpMethod":"GET"}]},{"path":"/routes/{id}/addDeliveries","description":"","operations":[{"notes":"","nickname":"addDeliveries","parameters":[{"name":"id","description":"Id of route","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"deliveries","description":"Array of deliveries","dataType":"Array","paramType":"query"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Add deliveries to route","httpMethod":"POST"}]},{"path":"/routes/{id}/removeDeliveries","description":"","operations":[{"notes":"","nickname":"removeDeliveries","parameters":[{"name":"id","description":"Id of route","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"deliveries","description":"Array of deliveries","dataType":"Array","paramType":"query"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"summary":"Remove deliveries from route","httpMethod":"POST"}]}],"models":{"Delivery":{"id":"Delivery","properties":{"trackingNr":{"type":"string"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"routeStartOffset":{"type":"integer"},"duration":{"type":"integer"},"company":{"type":"string"},"priority":{"type":"integer"},"addresses":{"type":"array","items":{"$ref":"Address"}},"etd":{"type":"ETD"},"state":{"type":"string","required":"true","enum":["Initial","Created","Assigned","In Transit","Out for Delivery","Delivered","Failed Attempt","Exception","Expired","Pending","Delayed"]},"note":{"type":"string"},"route":{"$ref":"Route"},"courier":{"$ref":"User"},"driverRating":{"type":"integer"},"deviceTokens":{"type":"array","items":{"type":"string"}}}},"User":{"id":"User","properties":{"username":{"type":"string","required":"true"},"company":{"type":"string","required":"true"},"vehicleId":{"type":"string"},"vehicleType":{"type":"string","enum":["bicycle","motorbike","van","car"]},"profile":{"type":"UserProfile"},"status":{"type":"string","enum":["active","deleted"]},"roles":{"type":"array","required":"true","enum":["admin","dispatcher","courier"]},"registrationDate":{"type":"date"},"online":{"type":"integer","required":"true","description":"User is online when 1"},"deviceTokens":{"type":"array"}}},"UserProfile":{"id":"UserProfile","properties":{"titleBefore":{"type":"string"},"name":{"type":"string"},"surname":{"type":"string"},"titleAfter":{"type":"string"},"age":{"type":"integer"},"phoneNr":{"type":"string"},"email":{"type":"string"}}},"Address":{"id":"Address","properties":{"type":{"type":"string","required":"true"},"validFrom":{"type":"string","format":"date-time"},"validTo":{"type":"string","format":"date-time"},"consignee":{"type":"string"},"phoneNr":{"type":"string"},"email":{"type":"string"},"country":{"type":"string"},"countryCode":{"type":"string"},"state":{"type":"string"},"county":{"type":"string"},"zip":{"type":"string"},"city":{"type":"string"},"district":{"type":"string"},"street":{"type":"string"},"housenumber":{"type":"number"},"coords":{"$ref":"Coordinates"}}},"Coordinates":{"id":"Coordinates","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"timestamp":{"type":"number"},"accuracy":{"type":"number"}}},"Route":{"id":"Route","properties":{"name":{"type":"string"},"company":{"type":"string"},"deliveries":{"type":"array","items":{"type":"Delivery"}},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"etr":{"$ref":"ETR"},"courier":{"$ref":"User"},"note":{"type":"string"},"state":{"type":"string"},"deviceTokens":{"type":"array","items":{"type":"string"}}}},"ETR":{"properties":{"distance":{"type":"number"},"time":{"type":"number"},"stops":{"type":"number"}}},"ETD":{"properties":{"date":{"type":"date"},"diffTime":{"type":"number"},"orderNr":{"type":"number"}}}}}},{"path":"/positions","description":"","apiDeclaration":{"swaggerVersion":"1.0","apiVersion":"2.0.1","basePath":"http://localhost:8888","resourcePath":"/positions","apis":[{"path":"/positions","description":"","operations":[{"notes":"Get all positions","nickname":"get","summary":"Returns all positions","parameters":[{"name":"courier","description":"Get positions by courier id","dataType":"string","paramType":"query"},{"name":"day","description":"Get positions by day of year (formula: YYYY+MM+DD)","dataType":"string","paramType":"query"},{"name":"page","description":"page number (mandatory)","dataType":"integer","paramType":"query"},{"name":"per_page","description":"users per page (default 10)","dataType":"integer","paramType":"query"}],"responseClass":"List[Position]","errorResponses":[{"code":401,"reason":"Authentication failed"}],"httpMethod":"GET"}]},{"path":"/positions/{courier}","description":"","operations":[{"notes":"Creating new position<br>EXAMPLE:<br><pre>{<br/>   &quot;coords&quot;:{<br/>      &quot;latitude&quot;:48.4189901,<br/>      &quot;longitude&quot;:17.0212386,<br/>      &quot;timestamp&quot;:1381878960618<br/>   }<br/>}</pre>On success: HTTP 201 status code will be returned and Location header will point to the URL of the new position.","nickname":"create","parameters":[{"name":"courier","description":"Id of courier","dataType":"string","required":true,"allowMultiple":false,"paramType":"path"},{"name":"position","description":"Position object that needs to be added to the db","dataType":"Position","required":true,"allowMultiple":false,"paramType":"body"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"responseHeaders":[{"name":"Location","description":"The full URI of the created resource","required":true,"value":"URI"}],"summary":"Create new position","httpMethod":"POST"}]}],"models":{"Position":{"id":"Position","properties":{"courier":{"type":"string"},"company":{"type":"string"},"timestamp":{"type":"number"},"coords":{"$ref":"Coordinates"}}},"Coordinates":{"id":"Coordinates","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"timestamp":{"type":"number"},"accuracy":{"type":"number"}}}}}},{"path":"/geocode","description":"","apiDeclaration":{"swaggerVersion":"1.0","apiVersion":"2.0.1","basePath":"http://localhost:8888","resourcePath":"/geocode","apis":[{"path":"/search","description":"","operations":[{"notes":"Get lat/lon for given query","nickname":"search","summary":"Returns lat/lon","parameters":[{"name":"address","description":"","dataType":"string","paramType":"query"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"httpMethod":"GET"}]},{"path":"/reverse","description":"","operations":[{"notes":"Get address for given lat/lon","nickname":"reverse","summary":"Returns address","parameters":[{"name":"lat","description":"","dataType":"number","paramType":"query"},{"name":"lon","description":"","dataType":"number","paramType":"query"}],"errorResponses":[{"code":401,"reason":"Authentication failed"}],"httpMethod":"GET"}]}],"models":{}}},{"path":"/dispatching","description":"","apiDeclaration":{"swaggerVersion":"1.0","apiVersion":"2.0.1","basePath":"http://localhost:8888","resourcePath":"/dispatching","apis":[{"path":"/findAvailableCouriers","description":"","operations":[{"nickname":"findAvailableCouriers","summary":"Find available couriers for the delivery","parameters":[{"name":"body","description":"Query","dataType":"DispatchQuery","required":true,"allowMultiple":false,"paramType":"body"}],"responseClass":"List[User]","errorResponses":[{"code":401,"reason":"Authentication failed"}],"httpMethod":"POST"}]},{"path":"/autoAssign","description":"","operations":[{"nickname":"autoAssign","summary":"Automatically assign delivery to the best courier","parameters":[{"name":"body","description":"Query","dataType":"AutoAssignDelivery","required":true,"allowMultiple":false,"paramType":"body"}],"responseClass":"Route","errorResponses":[{"code":401,"reason":"Authentication failed"}],"httpMethod":"POST"}]}],"models":{"AutoAssignDelivery":{"id":"AutoAssignDelivery","required":["delivery"],"properties":{"delivery":{"$ref":"Delivery"},"onlineSince":{"type":"string"}}},"DispatchQuery":{"id":"DispatchQuery","required":["pickupAddress","dropAddress"],"properties":{"pickupAddress":{"type":"string"},"dropAddress":{"type":"string"},"onlineSince":{"type":"string"},"deliveryDate":{"type":"string"}}},"User":{"id":"User","properties":{"username":{"type":"string","required":"true"},"company":{"type":"string","required":"true"},"vehicleId":{"type":"string"},"vehicleType":{"type":"string","enum":["bicycle","motorbike","van","car"]},"profile":{"type":"UserProfile"},"status":{"type":"string","enum":["active","deleted"]},"roles":{"type":"array","required":"true","enum":["admin","dispatcher","courier"]},"registrationDate":{"type":"date"},"online":{"type":"integer","required":"true","description":"User is online when 1"},"deviceTokens":{"type":"array"}}},"Delivery":{"id":"Delivery","properties":{"trackingNr":{"type":"string"},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"routeStartOffset":{"type":"integer"},"duration":{"type":"integer"},"company":{"type":"string"},"priority":{"type":"integer"},"addresses":{"type":"array","items":{"$ref":"Address"}},"etd":{"type":"ETD"},"state":{"type":"string","required":"true","enum":["Initial","Created","Assigned","In Transit","Out for Delivery","Delivered","Failed Attempt","Exception","Expired","Pending","Delayed"]},"note":{"type":"string"},"route":{"$ref":"Route"},"courier":{"$ref":"User"},"driverRating":{"type":"integer"},"deviceTokens":{"type":"array","items":{"type":"string"}}}},"Coordinates":{"id":"Coordinates","properties":{"latitude":{"type":"number"},"longitude":{"type":"number"},"timestamp":{"type":"number"},"accuracy":{"type":"number"}}},"Address":{"id":"Address","properties":{"type":{"type":"string","required":"true"},"validFrom":{"type":"string","format":"date-time"},"validTo":{"type":"string","format":"date-time"},"consignee":{"type":"string"},"phoneNr":{"type":"string"},"email":{"type":"string"},"country":{"type":"string"},"countryCode":{"type":"string"},"state":{"type":"string"},"county":{"type":"string"},"zip":{"type":"string"},"city":{"type":"string"},"district":{"type":"string"},"street":{"type":"string"},"housenumber":{"type":"number"},"coords":{"$ref":"Coordinates"}}},"Route":{"id":"Route","properties":{"name":{"type":"string"},"company":{"type":"string"},"deliveries":{"type":"array","items":{"type":"Delivery"}},"startDate":{"type":"string","format":"date-time"},"endDate":{"type":"string","format":"date-time"},"etr":{"$ref":"ETR"},"courier":{"$ref":"User"},"note":{"type":"string"},"state":{"type":"string"},"deviceTokens":{"type":"array","items":{"type":"string"}}}}}}}]}